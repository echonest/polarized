<!--
   Licensed to the Apache Software Foundation (ASF) under one
   or more contributor license agreements.  See the NOTICE file
   distributed with this work for additional information
   regarding copyright ownership.  The ASF licenses this file
   to you under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.    
-->
<project name="polarized" default="run" xmlns:ivy="antlib:org.apache.ivy.ant">
    <!-- some variables used -->
    <property name="lib.dir" value="lib" />
    <property name="build.dir" value="build" />
    <property name="src.dir" value="src" />
    <property name="dist.dir" value="dist" />
    <property name="example.dir" value="example" />
    
    <!-- paths used for compilation and run  -->
    <path id="lib.path.id">
        <fileset dir="${lib.dir}" />
	</path>
    <path id="run.path.id">
        <path refid="lib.path.id" />
        <path location="${build.dir}" />
    </path>

    <property name="ivy.bootstrap.version" value="2.2.0" />
    <property name="ivy.resource" value="org/apache/ivy/ant/antlib.xml" />
    <available resource="${ivy.resource}" property="ivy.available" />

    <target name="ivy-availability-check" unless="ivy.available">
      <echo>
	This build requires Ivy and Ivy could not be found in your ant classpath.

	(Due to classpath issues and the recursive nature of the Lucene/Solr 
	build system, a local copy of Ivy can not be used an loaded dynamically 
	by the build.xml)

	You can either manually install a copy of Ivy ${ivy.bootstrap.version} in your ant classpath:
	http://ant.apache.org/manual/install.html#optionalTasks
	
	Or this build file can do it for you by running the Ivy Bootstrap target:
	ant ivy-bootstrap     
	
	Either way you will only have to install Ivy one time.
	
	'ant ivy-bootstrap' will install a copy of Ivy into your Ant User Library:
	${user.home}/.ant/lib
     
	If you would prefer, you can have it installed into an alternative 
	directory using the "-Divy_install_path=/some/path/you/choose" option, 
	but you will have to specify this path every time you build Lucene/Solr 
	in the future...
	ant ivy-bootstrap -Divy_install_path=/some/path/you/choose
	...
	ant -lib /some/path/you/choose clean compile
	...
	ant -lib /some/path/you/choose clean compile
	
	If you have already run ivy-bootstrap, and still get this message, please 
	try using the "--noconfig" option when running ant, or editing your global
	ant config to allow the user lib to be loaded.  See the wiki for more details:
	http://wiki.apache.org/lucene-java/HowToContribute#antivy
      </echo>
    </target>

    <target name="ivy-fail" unless="ivy.available">
      <fail>Ivy is not available</fail>
    </target>

    <target name="ivy-bootstrap" description="Download and install Ivy in the users ant lib dir">
      <property name="ivy_install_path" location="${user.home}/.ant/lib" />
      <mkdir dir="${ivy_install_path}"/>
      <echo message="installing ivy ${ivy.bootstrap.version} to ${ivy_install_path}"/>
      <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.bootstrap.version}/ivy-${ivy.bootstrap.version}.jar"
           dest="${ivy_install_path}/ivy-${ivy.bootstrap.version}.jar" usetimestamp="true"/>
    </target>

    <!-- ================================= 
          target: resolve              
         ================================= -->
    <target name="resolve" description="--> retreive dependencies with ivy" depends="ivy-availability-check,ivy-fail">
        <ivy:retrieve/>
    </target>    

    <!-- ================================= 
          target: build              
         ================================= -->
    <target name="build" depends="resolve" description="--> build the library">
      <mkdir dir="${build.dir}" />
      <javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="lib.path.id" includeAntRuntime="false"/>
    </target>

    <!-- ================================= 
          target: dist
         ================================= -->
    <target name="dist" depends="build" description="--> make a jar">
      <mkdir dir="${dist.dir}" />
      <tstamp/>
      <jar jarfile="${dist.dir}/${ant.project.name}-${DSTAMP}.jar" basedir="${build.dir}"/>
    </target>    

    <!-- ================================= 
          target: copylib
         ================================= -->
    <target name="copylib" depends="dist" description="--> copy jar to example dir">
      <tstamp/>
      <copy file="${dist.dir}/${ant.project.name}-${DSTAMP}.jar" todir="${example.dir}/solr/conf/lib/"/> 
      <copy todir="${example.dir}/solr/conf/lib/" overwrite="true">
	<fileset dir="${lib.dir}"/>
      </copy>
    </target>
    
    <!-- ================================= 
          target: report              
         ================================= -->
    <target name="report" depends="resolve" description="--> generates a report of dependencies">
        <ivy:report todir="${build.dir}"/>
    </target>

    <!-- ================================= 
          target: clean              
         ================================= -->
    <target name="clean" description="--> clean the project">
      <delete dir="${build.dir}"/>
      <delete dir="${dist.dir}"/>
    </target>
	
    <!-- ================================= 
          target: clean-cache              
         ================================= -->
	<target name="clean-cache" description="--> clean the ivy cache">
		<ivy:cleancache />
	</target>
</project>
